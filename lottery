// SPDX-License-Identifier:MIT
pragma solidity ^0.8.0;

contract lottery {
    // entities - manager, players and winner
    address public manager = msg.sender;
    address payable [] public players;
    address payable winner;


    function participate () public payable {
        require (msg.value >= 1 ether, "please pay 1 or more ether");
        players.push(payable(msg.sender));
    }

    function getBalance () internal view returns (uint){
        require(manager == msg.sender, "you are not the manager");
        return address(this).balance;
    }

    function random () public view returns (uint) {
       return uint (keccak256(abi.encodePacked(block.prevrandao, block.timestamp, players.length)));
    }

    function picWinner () public {
        require (manager == msg.sender, "you are not manager");
        require (players.length >=3, "players are less than 3");
    

    uint r= random();
    uint index= r%players.length;
    winner= players [index];
    winner.transfer (getBalance());
    players = new address payable [](0);
    }

}

